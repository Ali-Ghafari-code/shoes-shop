// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Shoe {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Float
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  existing    Boolean  @default(true) // وضعیت موجودی
  createdAt   DateTime @default(now())
  
  mainColor      String   
  secondaryColor String  
  images      ShoeImage[]
  sizes       ShoeSize[]
  cartItems  CartItem[]
}

model ShoeImage {
  id     String @id @default(uuid())
  url    String
  shoeId String
  shoe   Shoe   @relation(fields: [shoeId], references: [id], onDelete: Cascade)
}

model ShoeSize {
  id     String @id @default(uuid())
  size   Int
  shoeId String
  shoe   Shoe   @relation(fields: [shoeId], references: [id], onDelete: Cascade)
}

model Category {
  id       String  @id @default(uuid())
  name     String  @unique
  slug     String  @unique
  shoes    Shoe[]
}

model SiteSettings {
  id        String  @id @default(uuid())
  theme     String  
}

model Cart {
  id        String   @id @default(uuid())
  userId    String   // اگر می‌خواهی سبد خرید به یک کاربر خاص اختصاص یابد
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  quantity  Int      @default(1)
  price     Float
  shoeId    String
  cartId    String
  shoe      Shoe     @relation(fields: [shoeId], references: [id])
  cart      Cart     @relation(fields: [cartId], references: [id], onDelete: Cascade)
}
